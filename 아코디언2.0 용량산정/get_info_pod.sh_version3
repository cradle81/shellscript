#!/bin/bash
## 특정 Namespace만 체크##
## 
DATE=`date +%Y/%m/%d:%H:%M`
WORK_DIR=/root/jungwon
LOGFILE=$WORK_DIR/logs/log-$(date +%Y%m%d%H%M).txt

## POD LIST ##
## 러닝 상태만 체크

kubectl get pod -A -o wide |grep Running| awk '{printf "%-30s %-40s %-20s\n", $1,$2,$8}' | sort | grep -v NAMESPACE>  $WORK_DIR/list.txt 

## 각 노드의 crictl 실행
## keygen으로 ssl copy가 되어야 함
for node in `kubectl get nodes | grep -v NAME | awk '{print $1}'`
do
ip=`kubectl get node -o wide |grep -v INTERNAL-IP | grep $node | awk '{print $6}'`
ssh root@$ip "crictl stats " > $WORK_DIR/$node.stats
ssh root@$ip "crictl ps " > $WORK_DIR/$node.ps
ssh root@$ip "crictl images " > $WORK_DIR/$node.images
done

#echo HEAD
printf "%-20s %-15s %-40s %-20s %-7s %-5s %-10s %-10s %-5s %-10s %-10s \n" "DATE" "NAMESPACE" "POD" "CONNAME" "CPU(m)" "CPU(%)" "MEM" "DISK" "REQCPU" "REQMEM" "IMAGESIZE" | tee $LOGFILE

while read line
do 
NS=`echo $line| awk '{print $1}'`
POD=`echo $line| awk '{print $2}'`
NODE=`echo $line | awk '{print $3}'`

#container count

#kubectl get pod $POD -n $NS -o json | jq -r ".spec.containers[].name" > conlist.txt
kubectl get pod $POD -n $NS -o json | jq -r '.status.containerStatuses[]|"\(.name), \(.containerID)"' > $WORK_DIR/conlist.txt
NODE_NAME=`kubectl get pod $POD -n $NS -o json | jq -r ".spec.nodeName"`

while read con
do

CON_ID=`echo $con | awk -F'//' '{print $2}' | cut -c1-13`
CON_NAME=`echo $con | awk -F',' '{print $1}'`
REQCPU=`kubectl get pod $POD -n $NS -o json | jq -r --arg con $CON_NAME '.spec.containers[]|select(.name==$con)|.resources.requests|.cpu//0'`
REQMEM=`kubectl get pod $POD -n $NS -o json | jq -r --arg con $CON_NAME '.spec.containers[]|select(.name==$con)|.resources.requests|.memory//0'`

CPU=`kubectl top pod $POD -n $NS --containers | awk -v con=$CON_NAME '{if(con==$2)print $3}'`
#MEM=`kubectl top pod $POD -n $NS --containers | awk -v con=$con '{if(con==$2)print $4}'`


#IMAGE=`kubectl get pod $POD -n $NS -o json | jq -r --arg con $CON_NAME '.spec.containers[]|select(.name==$con)|.image'| awk -F: '{if(NF==1) {printf "%s:latest\n",$0}\
# else if(NF==3) {printf "%s:%s\n", $1,$2} \
# else if(NF==2) {split($2,a,"/");if(length(a)>1){printf "%s:latest\n", $0} else {print $0}}}'`

#IMAGESIZE=`kubectl get node $NODE -o json | jq -r --arg image $IMAGE '.status.images[]|select(.names[] |contains($image))|.sizeBytes'|uniq `
## 이미지 사이즈가 0이 되는 경우가 있음..노드정보에 이미지 정보가 없음..왜 그러는지 모르겠지만...
#if [ "$IMAGESIZE" == "" ];then
#IMAGESIZE=0
#fi
#IMAGESIZE=`echo "scale=2; ${IMAGESIZE}/1024/1024" | bc -l`

#echo $CON_ID
#CRICTL_STATS=`ssh root@$NODE_NAME "crictl stats --id  $CON_ID"| grep -v CONTAINER`
CPU2=`grep $CON_ID $WORK_DIR/$NODE_NAME.stats | awk '{print $2}'`
MEM=`grep $CON_ID $WORK_DIR/$NODE_NAME.stats | awk '{print $3}'`
DISK=`grep $CON_ID $WORK_DIR/$NODE_NAME.stats | awk '{print $4}'`
IMAGE_ID=`grep $CON_ID $WORK_DIR/$NODE_NAME.ps | awk '{print $2}'`
##동일한 이미지가 있을 수 있음
IMAGESIZE=`grep $IMAGE_ID $WORK_DIR/$NODE_NAME.images | awk '{print $4}'|uniq`




#echo  $IMAGE $IMAGESIZE

printf "%-20s %-15s %-40s %-20s %-7s %-5s %-10s %-10s %-5s %-10s %-10s \n" $DATE ${NS:0:14} ${POD:0:39} ${CON_NAME:0:19} $CPU $CPU2 $MEM $DISK $REQCPU $REQMEM "${IMAGESIZE}"


done < $WORK_DIR/conlist.txt

#echo $POD
#kubectl get pod $POD -n $NS -o json | jq ".spec.containers[].resources"
done < $WORK_DIR/list.txt | tee -a $LOGFILE